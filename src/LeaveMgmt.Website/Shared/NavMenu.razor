@using LeaveMgmt.Website.Services
@inject AuthService Auth
@inject NavigationManager Nav

<div class="top-row ps-3 navbar navbar-dark bg-dark d-flex justify-content-between align-items-center">
    <div class="d-flex align-items-center">
        <a class="navbar-brand" href="/dashboard">
            @if (Auth.CurrentUser is not null)
            {
                <span><strong>@Auth.CurrentUser.UserName</strong> (@Auth.CurrentUser.Role)</span>
            }
        </a>
        <button title="Navigation menu" class="navbar-toggler ms-2" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>

</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/dashboard" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Dashboard
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/leave-requests">
                <span class="oi oi-calendar" aria-hidden="true"></span> Leave Requests
            </NavLink>
        </div>
        @if (!IsEmployee)
        {
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="/manage-requests">
                    <span class="oi oi-task" aria-hidden="true"></span> Manage Approvals
                </NavLink>
            </div>
        }
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/support">
                <span class="oi oi-phone" aria-hidden="true"></span> Support
            </NavLink>
        </div>
        <div class="nav-item px-3 mt-3">
            <button class="btn btn-sm btn-outline-light w-100" @onclick="Logout">Logout</button>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;
    private bool IsEmployee;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Auth.InitializeAsync();
            var role = Auth.CurrentUser?.Role ?? "Employee";
            IsEmployee = role.Equals("Employee", StringComparison.OrdinalIgnoreCase);
            StateHasChanged();
        }
    }

    private async Task Logout()
    {
        await Auth.LogoutAsync();
        Nav.NavigateTo("/", true);
    }
}
