@using MudBlazor

<MudDateRangePicker @bind-DateRange="_range"
                    PickerVariant="PickerVariant.Static"
                    OpenTo="OpenTo.Month"
                    AllowKeyboardInput="false"
                    Elevation="1"
                    Class="w-full" />

@code {
    [Parameter] public EventCallback<(DateOnly? Start, DateOnly? End)> OnRangeSelected { get; set; }

    private DateRange? _range; // null until user selects -> no 0001-01-01

    protected override void OnParametersSet()
    {
        // do nothing; let user choose the range (prevents defaulting to MinValue)
    }

    // call this from parent when you need to read the chosen range
    public async Task EmitRangeAsync()
    {
        var s = _range?.Start.HasValue == true ? DateOnly.FromDateTime(_range!.Start!.Value.Date) : (DateOnly?)null;
        var e = _range?.End.HasValue == true ? DateOnly.FromDateTime(_range!.End!.Value.Date) : (DateOnly?)null;
        await OnRangeSelected.InvokeAsync((s, e));
    }
}
