@page "/register"
@inject AuthService Auth
@inject NavigationManager Nav
@inject ISnackbar Snackbar

<MudPaper Class="pa-6" MaxWidth="480px" Style="margin:auto;">
    <MudText Typo="Typo.h5" Class="mb-4">Register</MudText>
    <EditForm Model="_vm" OnValidSubmit="Submit">
        <DataAnnotationsValidator />
        <MudTextField @bind-Value="_vm.UserName" Label="User Name" Required="true" />
        <MudTextField @bind-Value="_vm.Email" Label="Email" Required="true" />
        <MudTextField @bind-Value="_vm.Password" Label="Password" InputType="InputType.Password" Required="true" />
        <MudSelect @bind-Value="_vm.Role" Label="Role" Required="true">
            <MudSelectItem Value=@("Employee")>Employee</MudSelectItem>
            <MudSelectItem Value=@("Manager")>Manager</MudSelectItem>
            <MudSelectItem Value=@("Support")>Support</MudSelectItem>
        </MudSelect>
        <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="mt-3" FullWidth="true">
            Create account
        </MudButton>
    </EditForm>
</MudPaper>

@code {
    private RegisterBody _vm = new();

    private async Task Submit()
    {
        var res = await Auth.RegisterAsync(_vm);
        if (!res.Success) { Snackbar.Add(res.Error ?? "Registration failed", Severity.Error); return; }
        Snackbar.Add("Account created. Please login.", Severity.Success);
        Nav.NavigateTo("/login");
    }
}
